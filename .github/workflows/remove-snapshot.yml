name: Remove SNAPSHOT for release version

on:
    push:
        branches:
        - release

jobs:
    update-version:
        runs-on: ubuntu-latest
        permissions:
            pull-requests: write
            contents: write
            repository-projects: read

        steps:
            - name: Checkout the repository
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
                token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                java-version: '21'
                distribution: 'temurin'
                cache: maven
                server-id: github
                server-username: GITHUB_ACTOR
                server-password: GITHUB_TOKEN

            - name: Remove SNAPSHOT from pom.xml file
              run: mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false
              env:
                GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
                    
            - name: Get project version
              id: version
              run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

            - name: Commit and push changes
              run: |
                git config user.name "github-actions[bot]"
                git config user.email "github-actions[bot]@users.noreply.github.com"
                git add pom.xml
                git commit -m "Updated version" || echo "No changes to commit"
                git push origin release

            - name: Create PR to master
              id: create_pr
              run: |
                gh pr create --base master --head release \
                  --title "Merge pull request from ${{ github.repository_owner }}/release" \
                  --body "Release v${{ env.VERSION }}" \
                  --label release,automated
              env:
                GH_TOKEN: ${{ secrets.PR_TOKEN }}

            - name: Get PR number
              id: pr_number
              run: echo "PR_NUMBER=${{ steps.create_pr.outputs.pull-request-number }}" >> $GITHUB_ENV

            - name: Rename PR to match Github format
              if: env.PR_NUMBER
              run: gh pr edit $PR_NUMBER --title "Merge pull request #${{ env.PR_NUMBER }} from ${{ github.repository_owner }}/release"
